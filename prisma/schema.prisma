generator client {
  provider = "prisma-client-js"
  output   = "./"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL_SHADOW")
}

model User {
  id                String    @id
  name              String
  email             String
  emailVerified     Boolean
  image             String?
  createdAt         DateTime
  updatedAt         DateTime
  phoneNumber       String?
  flatOrHouseNumber String?
  line_one          String?
  line_two          String?
  stateOrUT         String?
  city              String?
  sessions          Session[]
  accounts          Account[]

  @@unique([email])
  @@unique([phoneNumber])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Waitlist {
  id        String @id
  email     String
  createdAt Int?
  updatedAt Int?

  @@unique([email])
  @@map("waitlist")
}

model Products {
  id                 String   @id
  name               String
  slug               String
  description        String
  originalPrice      Int
  price              Int?
  sizes              String[]
  images             String[]
  details            String[]
  care               String[]
  story              String
  culturalBackground String   @default("")
  category           String

  @@unique([id])
  @@unique([name])
  @@unique([slug])
  @@map("products")
}
